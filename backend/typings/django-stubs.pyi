# Django model stubs for better IDE support
from typing import Any, List, Optional, Union
from django.db import models

class Model:
    objects: Any
    id: int
    
    def save(self, *args: Any, **kwargs: Any) -> None: ...
    def delete(self, *args: Any, **kwargs: Any) -> None: ...
    def __str__(self) -> str: ...

class QuerySet:
    def filter(self, *args: Any, **kwargs: Any) -> 'QuerySet': ...
    def exclude(self, *args: Any, **kwargs: Any) -> 'QuerySet': ...
    def select_related(self, *args: Any) -> 'QuerySet': ...
    def prefetch_related(self, *args: Any) -> 'QuerySet': ...
    def count(self) -> int: ...
    def first(self) -> Optional[Model]: ...
    def last(self) -> Optional[Model]: ...
    def get(self, *args: Any, **kwargs: Any) -> Model: ...
    def all(self) -> 'QuerySet': ...
    def order_by(self, *args: Any) -> 'QuerySet': ...
    def values(self, *args: Any) -> 'QuerySet': ...
    def values_list(self, *args: Any, **kwargs: Any) -> 'QuerySet': ...
    def exists(self) -> bool: ...
    def __iter__(self) -> Any: ...
    def __len__(self) -> int: ...

class Manager:
    def all(self) -> QuerySet: ...
    def filter(self, *args: Any, **kwargs: Any) -> QuerySet: ...
    def exclude(self, *args: Any, **kwargs: Any) -> QuerySet: ...
    def get(self, *args: Any, **kwargs: Any) -> Model: ...
    def create(self, **kwargs: Any) -> Model: ...
    def get_or_create(self, defaults: Optional[dict] = None, **kwargs: Any) -> tuple[Model, bool]: ...
    def update_or_create(self, defaults: Optional[dict] = None, **kwargs: Any) -> tuple[Model, bool]: ...
    def count(self) -> int: ...
    def first(self) -> Optional[Model]: ...
    def last(self) -> Optional[Model]: ...
    def exists(self) -> bool: ...
    def select_related(self, *args: Any) -> QuerySet: ...
    def prefetch_related(self, *args: Any) -> QuerySet: ...
